{"schema_hash": "b8ced461f5151df95cc28477bbf85b6d", "examples": [["documentation", "The company database follows a hierarchical structure with the following key relationships:\n- Employees have a direct reporting relationship through manager_id\n- Each employee belongs to a department (dept_id)\n- Departments have managers who are employees\n- Job titles indicate organizational level (Director > Manager > Staff)\n- The hierarchy can be determined by following manager_id relationships\n"], ["ddl", "CREATE TABLE departments (\n  dept_id INT PRIMARY KEY,\n  dept_name VARCHAR(100) NOT NULL,\n  location VARCHAR(100),\n  manager_id INT,\n  FOREIGN KEY (manager_id) REFERENCES employees(emp_id)\n);\n"], ["ddl", "CREATE TABLE employees (\n  emp_id INT PRIMARY KEY,\n  first_name VARCHAR(50) NOT NULL,\n  last_name VARCHAR(50) NOT NULL,\n  manager_id INT,\n  dept_id INT,\n  job_title VARCHAR(100),\n  hire_date DATE,\n  salary DECIMAL(10,2),\n  FOREIGN KEY (manager_id) REFERENCES employees(emp_id),\n  FOREIGN KEY (dept_id) REFERENCES departments(dept_id)\n);\n"], ["sql", "-- Get direct reports for a manager\nSELECT e.emp_id, e.first_name, e.last_name, e.job_title\nFROM employees e\nWHERE e.manager_id = :manager_id;\n"], ["sql", "-- Get department manager\nSELECT e.*\nFROM employees e\nJOIN departments d ON d.manager_id = e.emp_id\nWHERE d.dept_id = :dept_id;\n"], ["pair", ["Who are all the managers in the company?", "SELECT DISTINCT \n  m.emp_id, \n  m.first_name, \n  m.last_name, \n  m.job_title,\n  d.dept_name,\n  COUNT(e.emp_id) as direct_reports\nFROM employees m\nLEFT JOIN employees e ON m.emp_id = e.manager_id\nLEFT JOIN departments d ON m.dept_id = d.dept_id\nWHERE m.job_title LIKE '%Manager%'\n   OR m.job_title LIKE '%Director%'\nGROUP BY \n  m.emp_id, m.first_name, m.last_name, \n  m.job_title, d.dept_name\nORDER BY d.dept_name, m.job_title;\n"]], ["pair", ["Show me the department hierarchy", "WITH RECURSIVE OrgHierarchy AS (\n  -- Start with department heads (no manager or highest level)\n  SELECT \n    e.emp_id,\n    e.first_name,\n    e.last_name,\n    e.manager_id,\n    e.dept_id,\n    e.job_title,\n    d.dept_name,\n    0 as level,\n    CAST(CONCAT(e.first_name, ' ', e.last_name) AS CHAR(1000)) as path\n  FROM employees e\n  JOIN departments d ON e.dept_id = d.dept_id\n  WHERE e.job_title LIKE '%Director%'\n  \n  UNION ALL\n  \n  -- Add all subordinates\n  SELECT \n    e.emp_id,\n    e.first_name,\n    e.last_name,\n    e.manager_id,\n    e.dept_id,\n    e.job_title,\n    d.dept_name,\n    oh.level + 1,\n    CAST(CONCAT(oh.path, ' > ', e.first_name, ' ', e.last_name) AS CHAR(1000)) as path\n  FROM employees e\n  JOIN departments d ON e.dept_id = d.dept_id\n  JOIN OrgHierarchy oh ON e.manager_id = oh.emp_id\n)\nSELECT \n  dept_name,\n  CONCAT(REPEAT('  ', level), first_name, ' ', last_name) as employee_name,\n  job_title,\n  level as hierarchy_level,\n  path as reporting_chain\nFROM OrgHierarchy\nORDER BY dept_name, level, last_name;\n"]], ["pair", ["Show me the reporting structure in the IT department", "WITH RECURSIVE DeptHierarchy AS (\n  SELECT \n    e.emp_id,\n    e.first_name,\n    e.last_name,\n    e.manager_id,\n    e.job_title,\n    0 as level\n  FROM employees e\n  JOIN departments d ON e.dept_id = d.dept_id\n  WHERE d.dept_name = 'IT'\n    AND (e.manager_id IS NULL OR e.job_title LIKE '%Director%')\n  \n  UNION ALL\n  \n  SELECT \n    e.emp_id,\n    e.first_name,\n    e.last_name,\n    e.manager_id,\n    e.job_title,\n    dh.level + 1\n  FROM employees e\n  JOIN DeptHierarchy dh ON e.manager_id = dh.emp_id\n)\nSELECT \n  CONCAT(REPEAT('    ', level), first_name, ' ', last_name) as employee,\n  job_title,\n  level as org_level,\n  (SELECT COUNT(*) FROM employees WHERE manager_id = dh.emp_id) as direct_reports\nFROM DeptHierarchy dh\nORDER BY level, last_name;\n"]]], "last_trained": "2025-01-21T19:03:46.364371"}